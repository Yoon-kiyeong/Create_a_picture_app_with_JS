range 라는 input을 사용하게 될 것이다.
minimum을 1로, maximum을 10으로, 실행할 때의 value를 5로 주었는데, 완전 중간에서 시작하는 것이다.
그 뜻은 ctx.lineWidth가 5로 시작한다는 의미이다.

그리고 우리는 이 range가 올라가고 내려가는걸 알아차리는 리스너를 만들어준다.
lineWidth.addEventListener("change", onLineWidthChange);

그리고 항상 event에 접근할 수 있다는 사실이 아주 중요하다.
왜냐면, event는 우리에게 input의 새로운 value(값)을 알려준다.

그런데 우리가 range를 굵게 만들면 이전에 그린 선까지 바뀌는걸 볼 수 있다.
그건 range를 더 크게 만들면 ctx의 lineWidth가 바뀌기 때문이다.
왜냐하면 우리가 ctx를 업데이트했기 때문이다.
우리가 하는 일은 선을 그리는 것뿐이다.
그래서 우리는 이전에 그려진 선과 새로운 선의 연결을 끊어줘야 한다.
왜냐면 모든 line들은 같은 path로 그려지기 때문이다.
그래서 우리가 해야 할 일은 여기에 새로운 path로 시작하도록 해야 한다.
benginPath로 이제 사용자가 마우스를 움직일 때, 새로운 path를 시작하게 될 것이다.
사용자가 선을 그리고 그리는게 끝나면, 새로운 path를 시작하게 된다.

마지막으로 range input의 또 다른 attribute가 있는데, 바로 stepㅇ디ㅏ
우리는 지금 1부터 10까지 총 10단계의 range가 있는데, 여기에 step을 0.5로 지정해주면 0.5씩 range가 변하기 때문에 좀 더 세밀하게 조정할 수 있다.
우리가 원한다면 더 세밀하게 조정할 수 있다.
